// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Database;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(TeacherDbContext))]
    [Migration("20241011093610_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.AcademicDegrees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Degree_Name");

                    b.HasKey("Id")
                        .HasName("PK_cd_academicDegrees_degrees_id");

                    b.ToTable("AcademicDegrees");
                });

            modelBuilder.Entity("WebApplication1.Models.Disciplines", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("discipline_name");

                    b.HasKey("Id")
                        .HasName("pk_cd_Disciplines_discipline_id");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("WebApplication1.Models.Facultys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Facultys_name");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("pk_cd_Facultys_faculty_id");

                    b.HasIndex("TeacherId")
                        .IsUnique()
                        .HasFilter("[TeacherId] IS NOT NULL");

                    b.HasIndex(new[] { "TeacherId" }, "idx_cd_Facultys_fk_teacher_id");

                    b.ToTable("cd_Facultys", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Posts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Post_name");

                    b.HasKey("Id")
                        .HasName("pk_cd_posts_post_id");

                    b.ToTable("posts");
                });

            modelBuilder.Entity("WebApplication1.Models.Teachers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("Ид преподователя");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DegreeId")
                        .HasColumnType("int");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar")
                        .HasColumnName("Teacher_firstname")
                        .HasComment("Имя преподователя");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar")
                        .HasColumnName("Teacher_Lastname")
                        .HasComment("фамилия преподователя");

                    b.Property<string>("Patronomical")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar")
                        .HasColumnName("Teacher_Patronomical")
                        .HasComment("Отчество преподователя");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar")
                        .HasColumnName("Teacher_phone")
                        .HasComment("Номер преподователя");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("pk_Teachers_id");

                    b.HasIndex(new[] { "DegreeId" }, "idx_Teachers_fk_academicdegree_id");

                    b.HasIndex(new[] { "FacultyId" }, "idx_Teachers_fk_faculty_id");

                    b.HasIndex(new[] { "PostId" }, "idx_Teachers_fk_post_id");

                    b.ToTable("Teachers", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.WorkLoads", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int>("Load")
                        .HasColumnType("int")
                        .HasColumnName("Load");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("pk_cd_workload_WorkLoad_id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("TeacherId");

                    b.ToTable("cd_workload", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Facultys", b =>
                {
                    b.HasOne("WebApplication1.Models.Teachers", "Teacher")
                        .WithOne()
                        .HasForeignKey("WebApplication1.Models.Facultys", "TeacherId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("WebApplication1.Models.Teachers", b =>
                {
                    b.HasOne("WebApplication1.Models.AcademicDegrees", "AcademicDegrees")
                        .WithMany()
                        .HasForeignKey("DegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_AcademicDegrees_id");

                    b.HasOne("WebApplication1.Models.Facultys", "Facultys")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Facultys_id");

                    b.HasOne("WebApplication1.Models.Posts", "Posts")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Post_id");

                    b.Navigation("AcademicDegrees");

                    b.Navigation("Facultys");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("WebApplication1.Models.WorkLoads", b =>
                {
                    b.HasOne("WebApplication1.Models.Disciplines", "Disciplines")
                        .WithMany()
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_disciple_id");

                    b.HasOne("WebApplication1.Models.Teachers", "Teachers")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_teacher_id");

                    b.Navigation("Disciplines");

                    b.Navigation("Teachers");
                });
#pragma warning restore 612, 618
        }
    }
}
